# align : using only GIZA++ alignment and parent alignemnt
giza_aligned par_aligned

# graph : using graph-based features
path_len path_types

# gram : (tecto)grammatical features
node1_t_lemma node2_t_lemma
    node1_tag node2_tag
    node1_utag node2_utag
    node1_par_utag node2_par_utag
    node1_reflex node2_reflex
    node1_functor node2_functor functor_cat functor_eq

# new_gram : new grammatical features
t_lemma_cat tag_cat utag_cat

# comb : combined features
alipar_functor_cat alipar_functor_eq
    alidir_n2_t_lemma alipar_n2_t_lemma

# comb1 : features combining the source node with original alignment
alidir_n1_t_lemma alipar_n1_t_lemma alisubtree_n1_t_lemma

# giza_id : GIZA + id -> should overfit on the training set
#__SELF__
#    @align
#    node1_id node2_id

# all+subtree_ali : including sutree alignmnent
#__SELF__
#    @align @graph @gram @comb
#    subtree_aligned


# all : using the best feature set so far
__SELF__
    @align @graph @gram @comb

# all+alisubtree_n2_t_lemma : best including the ali-subtree combined with the target t_lemma
__SELF__
    @align @graph @gram @comb
    alisubtree_n2_t_lemma

# all+new_gram : best including the concats of t_lemmas, tags and utags
__SELF__
    @align @graph @gram @comb
    @new_gram

# all+alisubtree_n2_t_lemma+new_gram : best including both
__SELF__
    @align @graph @gram @comb
    @new_gram
    alisubtree_n2_t_lemma

# all+comb1 : using the best feature set so far
__SELF__
    @align @graph @gram @comb
    @comb1

# all+alisubtree_n2_t_lemma+new_gram+comb1 : best including both
__SELF__
    @align @graph @gram @comb
    @new_gram
    alisubtree_n2_t_lemma
    @comb1

<<<EXPERIMENTS>>>

#giza
#graph
all
all+alisubtree_n2_t_lemma
all+new_gram
all+alisubtree_n2_t_lemma+new_gram

all+comb1
all+alisubtree_n2_t_lemma+new_gram+comb1
